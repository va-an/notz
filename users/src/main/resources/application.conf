my-app {
  routes {
    # If ask takes more time than this to complete the request is failed
    ask-timeout = 5s
  }
}

akka {
  actor {
    provider = "cluster"

    serialization-bindings {
      "io.vaan.notz.users.utils.JsonSerializable" = jackson-json
    }
  }

  remote.artery {
    canonical {
      hostname = "127.0.0.1"
      port = 2551
    }
  }
  cluster {
    seed-nodes = ["akka://notz@127.0.0.1:2551"]
  }

  persistence {
    journal.plugin = "akka.persistence.cassandra.journal"
    snapshot-store.plugin = "akka.persistence.cassandra.snapshot"

    cassandra {
      events-by-tag {
        bucket-size = "Day"
        # for reduced latency
        eventual-consistency-delay = 200ms
        flush-interval = 50ms
        pubsub-notification = on
        first-time-bucket = "20200115T00:00"
      }

      query {
        refresh-interval = 2s
      }

      journal.class = "akka.persistence.cassandra.journal.CassandraJournal"

      # don't use autocreate in production
      journal.keyspace-autocreate = on
      journal.tables-autocreate = on
      snapshot.keyspace-autocreate = on
      snapshot.tables-autocreate = on
    }
  }

  management {
    http {
      hostname = "127.0.0.1"
      port = 8558
    }
  }
}

datastax-java-driver {
  advanced.reconnect-on-init = true
}

